# 更新变更日志

手动更新项目的 CHANGELOG.md 文件，作为Claude Code自动维护的补充工具。

> **注意**: CHANGELOG.md 通常由 Claude Code 自动维护。此命令主要用于手动补充或特殊情况下的版本记录。

## 使用方法：
`/changelog <版本号> <变更类型> <变更描述>`

## 参数说明：
- `<版本号>`: 版本编号 (例如: "1.1.0")
- `<变更类型>`: 以下类型之一：
  - `added` (新增) - 新功能
  - `changed` (变更) - 现有功能的更改
  - `deprecated` (废弃) - 即将移除的功能
  - `removed` (移除) - 已删除的功能
  - `fixed` (修复) - Bug 修复
  - `security` (安全) - 安全性修复
- `<变更描述>`: 变更的详细描述

## 使用示例：
- `/changelog 1.1.0 added "新增用户认证系统 (closes #301)"`
- `/changelog 1.0.2 fixed "修复登录异常问题 (fixes #501)"`  
- `/changelog 1.2.0 changed "优化API性能和响应速度 (improves #901)"`

## 执行流程：
1. 检查 CHANGELOG.md 文件是否存在，不存在则创建
2. 查找或创建指定版本的章节
3. 在相应的变更类型下添加新条目
4. 按照 Keep a Changelog 规范格式化
5. 将更新后的变更日志写回文件
6. 可选择性地提交更改并生成适当的提交消息

## 格式标准：
遵循 [Keep a Changelog](https://keepachangelog.com) 格式：

### 标准结构：
```markdown
# 变更日志

## [版本号] - YYYY-MM-DD

### Added (新增)
- 新增用户认证系统 (closes #301)
- 添加API接口文档 (closes #101)

### Changed (变更)
- 优化数据库查询性能 (improves #901)  
- 更新UI设计规范 (closes #201)

### Deprecated (废弃)
- 旧版本API接口将在v3.0移除

### Removed (移除)
- 删除过时的工具函数 (closes #401)

### Fixed (修复)
- 修复登录异常问题 (fixes #501)
- 解决内存泄漏问题 (fixes #502)

### Security (安全)
- 加强数据加密机制 (closes #801)
```

## 最佳实践：
- **按类型分组**: 将变更按照上述 6 种类型分类
- **条目格式**: 使用项目符号列表
- **Issue关联**: 推荐使用 `(closes #123)` 格式关联相关Issue
- **版本日期**: 为版本章节添加发布日期
- **简洁描述**: 保持条目简洁但具有描述性
- **用户视角**: 从用户角度描述变更影响

## Issue关联格式：
- `(closes #123)` - 此变更关闭了Issue #123
- `(fixes #456)` - 此变更修复了Issue #456  
- `(improves #789)` - 此变更改进了Issue #789
- `(refs #101)` - 此变更引用了Issue #101

## 中文项目适配：
- 支持中文版本号描述
- 兼容中文日期格式
- 提供中文变更类型说明
- 自动生成中文提交消息

## 与 Git 工作流集成：
- 自动生成符合项目规范的提交消息
- 可结合 `/commit` 命令一起使用
- 支持 issue 编号关联
- 遵循项目的 emoji 提交规范

## 使用场景：
- 📝 **手动补充**: 补充Claude Code未自动记录的重要变更
- 🔧 **特殊情况**: 需要立即更新变更日志而非等待自动维护
- 📋 **版本整理**: 在版本发布前手动整理和完善变更记录
- 🎯 **精确控制**: 需要精确控制变更描述的表达方式

## 与自动维护的关系：
- **主要方式**: Claude Code 根据Git提交和开发进展自动更新
- **补充工具**: `/changelog` 命令用于手动补充和特殊情况
- **最佳实践**: 优先依赖自动维护，必要时使用手动命令